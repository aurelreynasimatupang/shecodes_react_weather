{"ast":null,"code":"var _jsxFileName = \"/Users/aurelia/Documents/GitHub/shecodes_react/src/bottom/BottomLeft.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport BottomRight from \"./BottomRight\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BottomLeft(props) {\n  _s();\n\n  let [name, setName] = useState(\"\");\n  let [temp, setTemp] = useState(null);\n  let [hum, setHum] = useState(null);\n  let [wind, setWind] = useState(null);\n  let [imgSrc, setImg] = useState(\"\");\n  let [time, setTime] = useState(\"\");\n  let [coord, setCoord] = useState(null);\n  let url = `https://api.openweathermap.org/data/2.5/weather?q=${props.city}&appid=0d38dd78cfe8683dd6b77aea943f1bbb&units=metric`;\n  axios.get(url).then(updateWeather);\n\n  function dateFunc(currentDate) {\n    let date = new Date(currentDate * 1000);\n    let hours = date.getHours();\n    let minutes = date.getMinutes();\n    let day = date.getDay();\n\n    if (minutes < 10) {\n      minutes = `0${minutes}`;\n    }\n\n    if (hours < 10) {\n      hours = `0${hours}`;\n    }\n\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    return `Last Updated: ${days[day]} ${hours}:${minutes}`;\n  }\n\n  function updateWeather(response) {\n    setName(response.data.name);\n    setTemp(Math.round(response.data.main.temp));\n    setHum(response.data.main.humidity);\n    setWind(response.data.wind.speed);\n    setImg(`https://openweathermap.org/img/wn/${response.data.weather[0].icon}@2x.png`);\n    setTime(dateFunc(response.data.dt));\n    setCoord;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"BottomLeft\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"selected-city\",\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"AppBottomLeftTop\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: imgSrc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"mainTemp\",\n        children: temp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        class: \"tempUnit\",\n        children: \"\\xB0C\\\\\\xB0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        id: \"date\",\n        children: time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"AppBottomLeftBottom\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Humidity:\", hum, \"%\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), \"Wind:\", wind, \" km/h\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BottomRight, {\n      coord: response.data.coord\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BottomLeft, \"8aOO/QPJaQZ2JErUGqbJsdg026M=\");\n\n_c = BottomLeft;\n\nvar _c;\n\n$RefreshReg$(_c, \"BottomLeft\");","map":{"version":3,"sources":["/Users/aurelia/Documents/GitHub/shecodes_react/src/bottom/BottomLeft.js"],"names":["React","useState","axios","BottomRight","BottomLeft","props","name","setName","temp","setTemp","hum","setHum","wind","setWind","imgSrc","setImg","time","setTime","coord","setCoord","url","city","get","then","updateWeather","dateFunc","currentDate","date","Date","hours","getHours","minutes","getMinutes","day","getDay","days","response","data","Math","round","main","humidity","speed","weather","icon","dt"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport BottomRight from \"./BottomRight\";\n\nexport default function BottomLeft(props) {\n  let [name, setName] = useState(\"\");\n  let [temp, setTemp] = useState(null);\n  let [hum, setHum] = useState(null);\n  let [wind, setWind] = useState(null);\n  let [imgSrc, setImg] = useState(\"\");\n  let [time, setTime] = useState(\"\");\n  let [coord, setCoord] = useState(null);\n\n  let url = `https://api.openweathermap.org/data/2.5/weather?q=${props.city}&appid=0d38dd78cfe8683dd6b77aea943f1bbb&units=metric`;\n  axios.get(url).then(updateWeather);\n\n  function dateFunc(currentDate) {\n    let date = new Date(currentDate * 1000);\n    let hours = date.getHours();\n    let minutes = date.getMinutes();\n    let day = date.getDay();\n\n    if (minutes < 10) {\n      minutes = `0${minutes}`;\n    }\n    if (hours < 10) {\n      hours = `0${hours}`;\n    }\n\n    let days = [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\",\n    ];\n    return `Last Updated: ${days[day]} ${hours}:${minutes}`;\n  }\n\n  function updateWeather(response) {\n    setName(response.data.name);\n    setTemp(Math.round(response.data.main.temp));\n    setHum(response.data.main.humidity);\n    setWind(response.data.wind.speed);\n    setImg(\n      `https://openweathermap.org/img/wn/${response.data.weather[0].icon}@2x.png`\n    );\n    setTime(dateFunc(response.data.dt));\n    setCoord;\n  }\n\n  return (\n    <div className=\"BottomLeft\">\n      <h1 id=\"selected-city\">{name}</h1>\n      <div class=\"AppBottomLeftTop\">\n        <img src={imgSrc} />\n        <br />\n        <h1 id=\"mainTemp\">{temp}</h1>\n        <h2 class=\"tempUnit\">°C\\°F</h2>\n        <h2 id=\"date\">{time}</h2>\n      </div>\n      <div class=\"AppBottomLeftBottom\">\n        <p>\n          Humidity:{hum}%\n          <br />\n          Wind:{wind} km/h\n        </p>\n      </div>\n      <BottomRight coord={response.data.coord} />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}