{"ast":null,"code":"var _jsxFileName = \"/Users/aurelia/Documents/GitHub/shecodes_react/src/bottom/Forecast.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport ForecastCard from \"./elements/ForecastCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Forecast(props) {\n  _s();\n\n  const [forecast, setForecast] = useState({});\n  const [ready, setReady] = useState(false);\n  useEffect(() => {\n    setReady(false);\n  }, [props.coord]);\n\n  function updateForecast(response) {\n    setForecast(response.data.daily);\n    console.log(forecast);\n    setReady(true);\n  }\n\n  if (!ready) {\n    const apiKey = \"6ca05cf5f1705e072a89eb633f8633e9\";\n    let url = `https://api.openweathermap.org/data/2.5/onecall?lat=${props.coord.lat}&lon=${props.coord.lon}&appid=${apiKey}&units=metric`;\n    axios.get(url).then(updateForecast);\n    return null;\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ForecastCard, {\n        weather: forecast[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ForecastCard, {\n        weather: forecast[2]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ForecastCard, {\n        weather: forecast[3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ForecastCard, {\n        weather: forecast[4]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ForecastCard, {\n        weather: forecast[5]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(Forecast, \"FMsl1G1k20LtRnMV/CmRplEQvtY=\");\n\n_c = Forecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"sources":["/Users/aurelia/Documents/GitHub/shecodes_react/src/bottom/Forecast.js"],"names":["React","useEffect","useState","axios","ForecastCard","Forecast","props","forecast","setForecast","ready","setReady","coord","updateForecast","response","data","daily","console","log","apiKey","url","lat","lon","get","then"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACtC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,KAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACD,GAFQ,EAEN,CAACJ,KAAK,CAACK,KAAP,CAFM,CAAT;;AAIA,WAASC,cAAT,CAAwBC,QAAxB,EAAkC;AAChCL,IAAAA,WAAW,CAACK,QAAQ,CAACC,IAAT,CAAcC,KAAf,CAAX;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ;AACAG,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;;AAED,MAAI,CAACD,KAAL,EAAY;AACV,UAAMS,MAAM,GAAG,kCAAf;AACA,QAAIC,GAAG,GAAI,uDAAsDb,KAAK,CAACK,KAAN,CAAYS,GAAI,QAAOd,KAAK,CAACK,KAAN,CAAYU,GAAI,UAASH,MAAO,eAAxH;AAEAf,IAAAA,KAAK,CAACmB,GAAN,CAAUH,GAAV,EAAeI,IAAf,CAAoBX,cAApB;AAEA,WAAO,IAAP;AACD,GAPD,MAOO;AACL,wBACE;AAAA,8BACE,QAAC,YAAD;AAAc,QAAA,OAAO,EAAEL,QAAQ,CAAC,CAAD;AAA/B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,YAAD;AAAc,QAAA,OAAO,EAAEA,QAAQ,CAAC,CAAD;AAA/B;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,YAAD;AAAc,QAAA,OAAO,EAAEA,QAAQ,CAAC,CAAD;AAA/B;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,YAAD;AAAc,QAAA,OAAO,EAAEA,QAAQ,CAAC,CAAD;AAA/B;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,QAAC,YAAD;AAAc,QAAA,OAAO,EAAEA,QAAQ,CAAC,CAAD;AAA/B;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD;AACF;;GAhCuBF,Q;;KAAAA,Q","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport ForecastCard from \"./elements/ForecastCard\";\n\nexport default function Forecast(props) {\n  const [forecast, setForecast] = useState({});\n  const [ready, setReady] = useState(false);\n\n  useEffect(() => {\n    setReady(false);\n  }, [props.coord]);\n\n  function updateForecast(response) {\n    setForecast(response.data.daily);\n    console.log(forecast);\n    setReady(true);\n  }\n\n  if (!ready) {\n    const apiKey = \"6ca05cf5f1705e072a89eb633f8633e9\";\n    let url = `https://api.openweathermap.org/data/2.5/onecall?lat=${props.coord.lat}&lon=${props.coord.lon}&appid=${apiKey}&units=metric`;\n\n    axios.get(url).then(updateForecast);\n\n    return null;\n  } else {\n    return (\n      <div>\n        <ForecastCard weather={forecast[1]} />\n        <ForecastCard weather={forecast[2]} />\n        <ForecastCard weather={forecast[3]} />\n        <ForecastCard weather={forecast[4]} />\n        <ForecastCard weather={forecast[5]} />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}