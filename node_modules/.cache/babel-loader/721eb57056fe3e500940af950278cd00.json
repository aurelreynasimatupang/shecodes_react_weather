{"ast":null,"code":"var _jsxFileName = \"/Users/aurelia/Documents/GitHub/shecodes_react/src/bottom/AppBottom.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport BottomRight from \"./BottomRight\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AppBottom(props) {\n  _s();\n\n  let [ready, setReady] = useState(false);\n  let [data, setData] = useState([]);\n  let id = \"9a3b65ea12488fdd227f03eda47a0bf6\";\n  let url = null;\n\n  function dateFunc(currentDate) {\n    let date = new Date(currentDate * 1000);\n    let hours = date.getHours();\n    let minutes = date.getMinutes();\n    let day = date.getDay();\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n    if (minutes < 10) {\n      minutes = `0${minutes}`;\n    }\n\n    if (hours < 10) {\n      hours = `0${hours}`;\n    }\n\n    return `Last Updated: ${days[day]} ${hours}:${minutes}`;\n  }\n\n  function updateWeather(response) {\n    setData({\n      city: response.data.name,\n      temp: response.data.main.temp,\n      hum: response.data.main.humidity,\n      wind: response.data.main.wind.speed,\n      imgSrc: `https://openweathermap.org/img/wn/${response.data.weather[0].icon}@2x.png`,\n      time: dateFunc(response.data.dt),\n      coord: response.data.coord\n    });\n    setReady(true);\n  }\n\n  if (!ready) {\n    url = `https://api.openweathermap.org/data/2.5/weather?q=${props.city}&appid=${id}&units=metric`;\n    axios.get(url).then(updateWeather);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"AppBottom\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"BottomLeft\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"selected-city\",\n          children: data.city\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"AppBottomLeftTop\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: data.imgSrc,\n            alt: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            id: \"mainTemp\",\n            children: data.temp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            class: \"tempUnit\",\n            children: \"\\xB0C\\\\\\xB0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            id: \"date\",\n            children: data.time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"AppBottomLeftBottom\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Humidity:\", data.hum, \"%\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), \"Wind:\", data.wind, \" km/h\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BottomRight, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 10\n  }, this);\n}\n\n_s(AppBottom, \"/gwjVmk4ooLwiiOhpEYfVK7OYmU=\");\n\n_c = AppBottom;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppBottom\");","map":{"version":3,"sources":["/Users/aurelia/Documents/GitHub/shecodes_react/src/bottom/AppBottom.js"],"names":["React","useState","axios","BottomRight","AppBottom","props","ready","setReady","data","setData","id","url","dateFunc","currentDate","date","Date","hours","getHours","minutes","getMinutes","day","getDay","days","updateWeather","response","city","name","temp","main","hum","humidity","wind","speed","imgSrc","weather","icon","time","dt","coord","get","then"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport BottomRight from \"./BottomRight\";\n\nexport default function AppBottom(props) {\n  let [ready, setReady] = useState(false);\n  let [data, setData] = useState([]);\n  let id = \"9a3b65ea12488fdd227f03eda47a0bf6\";\n  let url = null;\n\n  function dateFunc(currentDate) {\n    let date = new Date(currentDate * 1000);\n    let hours = date.getHours();\n    let minutes = date.getMinutes();\n    let day = date.getDay();\n    let days = [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\",\n    ];\n    if (minutes < 10) {\n      minutes = `0${minutes}`;\n    }\n    if (hours < 10) {\n      hours = `0${hours}`;\n    }\n    return `Last Updated: ${days[day]} ${hours}:${minutes}`;\n  }\n\n  function updateWeather(response) {\n    setData({\n      city: response.data.name,\n      temp: response.data.main.temp,\n      hum: response.data.main.humidity,\n      wind: response.data.main.wind.speed,\n      imgSrc: `https://openweathermap.org/img/wn/${response.data.weather[0].icon}@2x.png`,\n      time: dateFunc(response.data.dt),\n      coord: response.data.coord,\n    });\n    setReady(true);\n  }\n\n  if (!ready) {\n    url = `https://api.openweathermap.org/data/2.5/weather?q=${props.city}&appid=${id}&units=metric`;\n    axios.get(url).then(updateWeather);\n  } else {\n    return (\n      <div className=\"AppBottom\">\n        <div className=\"BottomLeft\">\n          <h1 id=\"selected-city\">{data.city}</h1>\n          <div class=\"AppBottomLeftTop\">\n            <img src={data.imgSrc} alt=\"icon\" />\n            <br />\n            <h1 id=\"mainTemp\">{data.temp}</h1>\n            <h2 class=\"tempUnit\">°C\\°F</h2>\n            <h2 id=\"date\">{data.time}</h2>\n          </div>\n          <div class=\"AppBottomLeftBottom\">\n            <p>\n              Humidity:{data.hum}%\n              <br />\n              Wind:{data.wind} km/h\n            </p>\n          </div>\n        </div>\n        <BottomRight />\n      </div>\n    );\n  }\n  return <div>Loading...</div>;\n}\n"]},"metadata":{},"sourceType":"module"}