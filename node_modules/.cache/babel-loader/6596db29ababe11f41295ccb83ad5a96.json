{"ast":null,"code":"var _jsxFileName = \"/Users/aurelia/Documents/GitHub/shecodes_react/src/bottom/BottomLeft.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport BottomRight from \"./BottomRight\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BottomLeft(props) {\n  _s();\n\n  let [data, setData] = useState([]);\n  const [ready, setReady] = useState(true);\n\n  function dateFunc(currentDate) {\n    let date = new Date(currentDate * 1000);\n    let hours = date.getHours();\n    let minutes = date.getMinutes();\n    let day = date.getDay();\n\n    if (minutes < 10) {\n      minutes = `0${minutes}`;\n    }\n\n    if (hours < 10) {\n      hours = `0${hours}`;\n    }\n\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    return `Last Updated: ${days[day]} ${hours}:${minutes}`;\n  }\n\n  function updateWeather(response) {\n    setData({\n      city: response.data.name,\n      temperature: response.data.main.temp,\n      humidity: response.data.name,\n      wind: response.data.wind.speed,\n      imgSrc: `https://openweathermap.org/img/wn/${response.data.weather[0].icon}@2x.png`,\n      time: dateFunc(response.data.dt),\n      coord: response.data.coord\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"BottomLeft\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"selected-city\",\n      children: data.city\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"AppBottomLeftTop\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: data.imgSrc,\n        alt: \"icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"mainTemp\",\n        children: data.temperature\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        class: \"tempUnit\",\n        children: \"\\xB0C\\\\\\xB0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        id: \"date\",\n        children: data.time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"AppBottomLeftBottom\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Humidity:\", data.humidity, \"%\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), \"Wind:\", data.wind, \" km/h\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BottomRight, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n  let url = `https://api.openweathermap.org/data/2.5/weather?q=${props.city}&appid=9a3b65ea12488fdd227f03eda47a0bf6&units=metric`;\n  axios.get(url).then(updateWeather);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"BottomLeft\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 10\n  }, this);\n}\n\n_s(BottomLeft, \"/C+dxOD28H0FbIggq6Nh1rD6+JM=\");\n\n_c = BottomLeft;\n\nvar _c;\n\n$RefreshReg$(_c, \"BottomLeft\");","map":{"version":3,"sources":["/Users/aurelia/Documents/GitHub/shecodes_react/src/bottom/BottomLeft.js"],"names":["React","useState","axios","BottomRight","BottomLeft","props","data","setData","ready","setReady","dateFunc","currentDate","date","Date","hours","getHours","minutes","getMinutes","day","getDay","days","updateWeather","response","city","name","temperature","main","temp","humidity","wind","speed","imgSrc","weather","icon","time","dt","coord","url","get","then"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport BottomRight from \"./BottomRight\";\n\nexport default function BottomLeft(props) {\n  let [data, setData] = useState([]);\n  const [ready, setReady] = useState(true);\n\n  function dateFunc(currentDate) {\n    let date = new Date(currentDate * 1000);\n    let hours = date.getHours();\n    let minutes = date.getMinutes();\n    let day = date.getDay();\n\n    if (minutes < 10) {\n      minutes = `0${minutes}`;\n    }\n    if (hours < 10) {\n      hours = `0${hours}`;\n    }\n\n    let days = [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\",\n    ];\n    return `Last Updated: ${days[day]} ${hours}:${minutes}`;\n  }\n\n  function updateWeather(response) {\n    setData({\n      city: response.data.name,\n      temperature: response.data.main.temp,\n      humidity: response.data.name,\n      wind: response.data.wind.speed,\n      imgSrc: `https://openweathermap.org/img/wn/${response.data.weather[0].icon}@2x.png`,\n      time: dateFunc(response.data.dt),\n      coord: response.data.coord,\n    });\n  }\n  return (\n    <div className=\"BottomLeft\">\n      <h1 id=\"selected-city\">{data.city}</h1>\n      <div class=\"AppBottomLeftTop\">\n        <img src={data.imgSrc} alt=\"icon\" />\n        <br />\n        <h1 id=\"mainTemp\">{data.temperature}</h1>\n        <h2 class=\"tempUnit\">°C\\°F</h2>\n        <h2 id=\"date\">{data.time}</h2>\n      </div>\n      <div class=\"AppBottomLeftBottom\">\n        <p>\n          Humidity:{data.humidity}%\n          <br />\n          Wind:{data.wind} km/h\n        </p>\n      </div>\n      <BottomRight />\n    </div>\n  );\n  let url = `https://api.openweathermap.org/data/2.5/weather?q=${props.city}&appid=9a3b65ea12488fdd227f03eda47a0bf6&units=metric`;\n  axios.get(url).then(updateWeather);\n  return <div className=\"BottomLeft\">Loading...</div>;\n}\n"]},"metadata":{},"sourceType":"module"}