{"ast":null,"code":"var _jsxFileName = \"/Users/aurelia/Documents/GitHub/shecodes_react/src/bottom/BottomLeft.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BottomLeft(props) {\n  _s();\n\n  let [name, setName] = useState(\"\");\n  let [temp, setTemp] = useState(null);\n  let [hum, setHum] = useState(null);\n  let [wind, setWind] = useState(null);\n  let [imgSrc, setImg] = useState(\"\");\n  let [time, setTime] = useState(\"\");\n  let [coord, setCoord] = useState(null);\n  const [ready, setReady] = useState(false);\n\n  function dateFunc(currentDate) {\n    let date = new Date(currentDate * 1000);\n    let hours = date.getHours();\n    let minutes = date.getMinutes();\n    let day = date.getDay();\n\n    if (minutes < 10) {\n      minutes = `0${minutes}`;\n    }\n\n    if (hours < 10) {\n      hours = `0${hours}`;\n    }\n\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    return `Last Updated: ${days[day]} ${hours}:${minutes}`;\n  }\n\n  function updateWeather(response) {\n    setName(response.data.name);\n    setTemp(Math.round(response.data.main.temp));\n    setHum(response.data.main.humidity);\n    setWind(response.data.wind.speed);\n    setImg(`https://openweathermap.org/img/wn/${response.data.weather[0].icon}@2x.png`);\n    setTime(dateFunc(response.data.dt));\n    setCoord(response.data.coord);\n    setReady(true);\n  }\n\n  if (ready) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"BottomLeft\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"selected-city\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"AppBottomLeftTop\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: imgSrc,\n          alt: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"mainTemp\",\n          children: temp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          class: \"tempUnit\",\n          children: \"\\xB0C\\\\\\xB0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          id: \"date\",\n          children: time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"AppBottomLeftBottom\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Humidity:\", hum, \"%\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), \"Wind:\", wind, \" km/h\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  } else {\n    let url = `https://api.openweathermap.org/data/2.5/weather?q=${props.city}&appid=9a3b65ea12488fdd227f03eda47a0bf6&units=metric`;\n    axios.get(url).then(updateWeather);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"BottomLeft\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 10\n  }, this);\n}\n\n_s(BottomLeft, \"ql2ePZXlYSfQ0b1qcvZuUX7kQBg=\");\n\n_c = BottomLeft;\n\nvar _c;\n\n$RefreshReg$(_c, \"BottomLeft\");","map":{"version":3,"sources":["/Users/aurelia/Documents/GitHub/shecodes_react/src/bottom/BottomLeft.js"],"names":["React","useState","axios","BottomLeft","props","name","setName","temp","setTemp","hum","setHum","wind","setWind","imgSrc","setImg","time","setTime","coord","setCoord","ready","setReady","dateFunc","currentDate","date","Date","hours","getHours","minutes","getMinutes","day","getDay","days","updateWeather","response","data","Math","round","main","humidity","speed","weather","icon","dt","url","city","get","then"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nexport default function BottomLeft(props) {\n  let [name, setName] = useState(\"\");\n  let [temp, setTemp] = useState(null);\n  let [hum, setHum] = useState(null);\n  let [wind, setWind] = useState(null);\n  let [imgSrc, setImg] = useState(\"\");\n  let [time, setTime] = useState(\"\");\n  let [coord, setCoord] = useState(null);\n  const [ready, setReady] = useState(false);\n\n  function dateFunc(currentDate) {\n    let date = new Date(currentDate * 1000);\n    let hours = date.getHours();\n    let minutes = date.getMinutes();\n    let day = date.getDay();\n\n    if (minutes < 10) {\n      minutes = `0${minutes}`;\n    }\n    if (hours < 10) {\n      hours = `0${hours}`;\n    }\n\n    let days = [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\",\n    ];\n    return `Last Updated: ${days[day]} ${hours}:${minutes}`;\n  }\n\n  function updateWeather(response) {\n    setName(response.data.name);\n    setTemp(Math.round(response.data.main.temp));\n    setHum(response.data.main.humidity);\n    setWind(response.data.wind.speed);\n    setImg(\n      `https://openweathermap.org/img/wn/${response.data.weather[0].icon}@2x.png`\n    );\n    setTime(dateFunc(response.data.dt));\n    setCoord(response.data.coord);\n    setReady(true);\n  }\n\n  if (ready) {\n    return (\n      <div className=\"BottomLeft\">\n        <h1 id=\"selected-city\">{name}</h1>\n        <div class=\"AppBottomLeftTop\">\n          <img src={imgSrc} alt=\"icon\" />\n          <br />\n          <h1 id=\"mainTemp\">{temp}</h1>\n          <h2 class=\"tempUnit\">°C\\°F</h2>\n          <h2 id=\"date\">{time}</h2>\n        </div>\n        <div class=\"AppBottomLeftBottom\">\n          <p>\n            Humidity:{hum}%\n            <br />\n            Wind:{wind} km/h\n          </p>\n        </div>\n      </div>\n    );\n  } else {\n    let url = `https://api.openweathermap.org/data/2.5/weather?q=${props.city}&appid=9a3b65ea12488fdd227f03eda47a0bf6&units=metric`;\n    axios.get(url).then(updateWeather);\n  }\n  return <div className=\"BottomLeft\">Loading...</div>;\n}\n"]},"metadata":{},"sourceType":"module"}